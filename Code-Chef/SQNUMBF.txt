#include<bits/stdc++.h>
using namespace std;
typedef long long int llt;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<llt> vi;
llt gcd(llt a, llt b) {
	return b ? gcd(b, a % b) : a;
}
int f(llt x) {
	llt rx = sqrt(x);
    if(rx*rx == x) return rx;
	return -1;
}
llt solve(int n,vi& a,vector<int>& ps){
    for (int i = 0; i < n; i++)
		for (int j = i + 1; j < n; j++)
			if (gcd(a[i], a[j]) != 1){
				return gcd(a[i], a[j]);
            }
    for(int i=0;i<a.size();i++){
        for(int j=0;j<ps.size();j++){
            if (a[i] % ps[j] == 0) {
				a[i] /= ps[j];
				if (a[i] % ps[j] == 0) return ps[j];
			}
        }
        int rx = f(a[i]);
		if (rx != -1 && rx != 1) return rx;
    }
    return -1;
}
int main(){
    vector<bool> p(1000001, true);
    for (int i = 2; i <= 1000000; i++)
        if (p[i])
            for (int j = i * 2; j <= 1000000; j += i)
                p[j] = false;
    vector<int> ps;
    for (int i = 2; i <= 1000000; i++)
        if (p[i])
            ps.push_back(i);
    int tc;
    cin>>tc;
    while(tc--){
        int n;
        cin>>n;
        llt x;
        vector<llt> a;
        for(int i=0;i<n;i++){
            cin>>x;
            a.push_back(x);
        }
        cout<<solve(n,a,ps)<<endl;
    }
  return 0;
}
