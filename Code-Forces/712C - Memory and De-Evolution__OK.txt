/* http://codeforces.com/problemset/problem/712/C */
/* Day 03 */

/* Codeforces  problemset 474/D 
// author = "akgarhwal"

#include <iostream>
using namespace std;
#define mod 1000000007

int main(){
	int t,k;
	cin>>t>>k;
	long long a[100000+1];
	a[0] =1;
	for(int i=1; i<= 100000; i++){
		a[i] = a[i-1];
		if(i-k>=0){
			a[i] = (a[i] + a[i-k])%mod;
		}
	}
	for(int i=1; i<=100000 ; i++){
		a[i] = (a[i] + a[i-1])%mod;
	}
	while(t--){
		int A,b;
		cin>>A>>b;
		long long res = (a[b]-a[A-1]+mod)%mod;
		cout<<res<<endl;
	}

	return 0;
}

*/

/* Q2. 

codeforces.com/problems/minimum-cost-of-ropes/0 	
Link GFG : http://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes/0

// author = "akgarhwal"

#include <iostream>
using namespace std;

int n;
int a[1000];
void minheapfy(int i){
	int par = i/2;
	if(par>0 and a[i] < a[par]){
		swap(a[i],a[par]);
		minheapfy(par);
	}
}

void arrange(int i){
	int left = 2*i,right = 2*i+1;

	int mi = i;

	if(left <= n and a[i] > a[left]){
		mi = left;
	}
	if(right <= n and a[mi] > a[right]){
		mi = right;
	}
	if(mi != i){
		swap(a[i],a[mi]);
		arrange(mi);
	}

}


void minHeap(int n){
	for(int i=n/2+1; i>=1; i--){
		arrange(i);
	}
}

int main(){
	
	int t;
	cin>>t;
	while(t--){

		cin>>n;
		a[0]=0;
		for(int i=1; i<=n ; i++){
			cin>>a[i];
		}
		minHeap(n);
		
		int  ans=0;
		while(n>1){

			int x = a[1];
			swap(a[1],a[n]);
			n--;
			arrange(1);
			int y = a[1];
			swap(a[1],a[n]);
			n--;
			arrange(1);

			ans += (x+y);

			a[n+1] = (x+y);
			n++;
			minheapfy(n);

		}
		cout<<ans<<endl;
	}
	return 	0;
}

*/

/* Q3.
 http://codeforces.com/contest/712/problem/C
	

*/
// author = "akgarhwal"

#include <iostream>
using namespace std;

int main(){
	
	int X,y;
	cin>>X>>y;
	int a[3]={y,y,y};

	bool isOK = true;
	int ans=0;

	while(isOK){

		int mind = -1;
		int mx = -1;
		int x = a[1]+a[2]-1;
		if(x-a[0] > mx){
			mx = max(mx,x-a[0]);
			mind = 0;
		}
		x = a[0]+a[2]-1;
		if(x-a[1] > mx){
			mx = max(mx,x-a[1]);
			mind = 1;
		}
		x = a[1]+a[0]-1;
		if(x-a[2] > mx){
			mx = max(mx,x-a[2]);
			mind = 2;
		}

		if(a[mind]+mx > X){
			a[mind] = X;
			mx = X;
		}
		else{
			a[mind] += mx;
		}

		if(a[0] == a[1] and a[1]== a[2] and a[1] == X ){
			isOK = false;
		}
		ans++;

	}
	cout<<ans<<endl;


	return 0;
}


