/* http://codeforces.com/problemset/problem/810/B */
/* Day 2 Programming Pathashala */

/* Q1. WAP to find number that occur more than n/2 times in array with constant space.*/

/* Answer 
// author = "akgarhwal"

#include <iostream>
using namespace std;

int main(){
	
	int n;
	cin>>n;
	int a[n];
	for(int i=0; i< n; i++){
		cin>>a[i];
	}
	int ans=a[0],count =0;
	for(int i=0; i< n; i++){
		if(a[i] == ans){
			count++;
		}
		else{
			count--;
		}
		if(count<0){
			ans = a[i];
			count=1;
		}
	}
	cout<<ans<<endl;

	return 0;
}
*/


/* Q2.  SPOJ  Cows				*/

/* Try it again */

/*Q3. Print all subset of an array usinng recusion */ 

/*
*************remove extra bool array using bit number*******************
// author = "akgarhwal"

#include <iostream>
using namespace std;

bool is[100];

void printSubset(int a[],bool is[],int i,int n){

	if(i == n){
		for(int i=0; i< n; i++){
			if(is[i]){
				cout<<a[i]<<" ";
			}
		}
		cout<<endl;
		return ;
	}

	printSubset(a,is,i+1,n);
	is[i] = false;
	printSubset(a,is,i+1,n);
	is[i] = true;

}  

void printIter(int a[],int n){
	
	for(int i=1; i<(1<<n) ; i++){
		cout<<"{";
		for(int j=0; j< n; j++){
			if( (i&(1<<j)) ){
				cout<<a[j]<<",";
			}
		}
		cout<<"}\n";

	}

}


int main(){
	
	int n;
	cin>>n;
	int a[n];
	for(int i=0; i< n; i++){
		cin>>a[i];
		is[i] = true;
	}
	//printSubset(a,is,0,n);

	printIter(a,n);


	return 0;
}
*/

/* Q4. WAP to print all permutation of an array */
/*
// author = "akgarhwal"

#include <iostream>
using namespace std;

void permute(int a[],int i,int n){

	if(i == n-1){
		for(int i=0; i< n; i++){
			cout<<a[i]<<" ";
		}
		cout<<"\n";
		return ;
	}

	for(int j=i; j<n ; j++){
			swap(a[i],a[j]);
			permute(a,i+1,n);
			swap(a[i],a[j]);
	}

}

void print(int n,int i){

	if(i==n){
		cout<<n<<" ";
		return ;
	}
	cout<<i<<" ";
	print(n,i+1);
	cout<<i<<" ";

}


int main(){
	
	int n;
	cin>>n;
	int a[n];
	for(int i=0; i< n; i++){
		cin>>a[i];
	}
	//print(5,1);
	permute(a,0,n);

	return 0;
}

*/


/* Q5. WAP  to find number of way to decorate garden where blue 
flower can be used exactly k times continuous */  
/*
// author = "akgarhwal"

#include <iostream>
using namespace std;

// DP1
int count(int n,int k,int i){

	if(i>=n){
		return 1;
	}
	int ans = 0;
	ans += count(n,k,i+1);
	if(i+k<=n){
		ans += count(n,k,i+k);
	}
	return ans;

}

//DP2
int count2(int n,int k){

	if(n<0){
		return 1;
	}
	int ans = 0;
	ans += count2(n-1,k);
	if(n-k>=0){
		ans += count2(n-k,k);
	}
	return ans;

}

int main(){
	int n,k;
	cin>>n>>k;

	cout<<count2(n,k);
	
	return 0;
}

*/

// author = "akgarhwal"

#include <bits/stdc++.h>
using namespace std;


int main(){
	long long n,f;
	cin>>n>>f;
	long long a[n];
	long long sum=0,c=0;
	for(int i=0; i< n; i++){
		long long k,l;
		cin>>k>>l;
		sum += min(k,l);
		if(k<l){
			a[c++] = min(k,l-k);
		}
	}
	sort(a,a+c);
	for(int i=c-1;i>=0 and f; i--){
		sum += a[i];
		f--;
	}
	cout<<sum<<endl;

	return 0;
}